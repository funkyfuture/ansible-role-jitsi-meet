server {
    listen 80;
    {%- if not disable_ipv6 %}
    listen [::]:80;
    {%- endif %}
    server_name {{ jitsi_meet_server_name }};

    location ^~ /.well-known/acme-challenge/ {
       default_type "text/plain";
       root         /usr/share/jitsi-meet;
    }
    location = /.well-known/acme-challenge/ {
       return 404;
    }
    location / {
       return 301 https://$host$request_uri;
    }
}
server {

    {% set listening_port = "4444" if jitsi_meet_nginx_multiplexer else "443" %}
    listen {{ listening_port }} ssl http2;
    {%- if not disable_ipv6 %}
    listen [::]:{{ listening_port }} ssl http2;
    {%- endif %}

    server_name {{ jitsi_meet_server_name }};

    add_header Strict-Transport-Security "max-age=31536000";

    ssl_certificate {{ jitsi_meet_ssl_cert_path }};
    ssl_certificate_key {{ jitsi_meet_ssl_key_path }};

    # ssi on with javascript for multidomain variables in config.js
    ssi on;
    ssi_types application/x-javascript application/javascript;

    index index.html;
    error_page 404 /static/404.html;

    location = /config.js {
        alias /etc/jitsi/meet/{{ jitsi_meet_server_name }}-config.js;
    }

    location = /interface_config.js {
        alias /etc/jitsi/meet/{{ jitsi_meet_server_name }}-interface_config.js;
    }

    location = /external_api.js {
        alias /usr/share/jitsi-meet/libs/external_api.min.js;
    }

    # static assets and non-config includes

    location @vendor_assets {
        root /usr/share/jitsi-meet;
    }

    location / {
        root /usr/local/share/jitsi-meet;
        try_files $uri @vendor_assets;
    }

    # XMPP BOSH endpoint

    location = /http-bind {
        proxy_pass http://127.0.0.1:5280/http-bind;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $http_host;
    }

    # XMPP websockets

    location = /xmpp-websocket {
        proxy_pass http://127.0.0.1:5280/xmpp-websocket?$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        tcp_nodelay on;
    }

    # serve index.html for requested room names
    #
    # this is a best effort to match letters and digits from all scripts.
    # it relies on testing Unicode properties, but it isn't reliable, e.g.
    # спаси́бо doesn't match, but спасибо does.

    location ~ "(*UTF8)^/[\p{L}\p{N}]+$" {
        alias /usr/share/jitsi-meet/index.html;
        default_type text/html;
    }

}
